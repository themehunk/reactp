{"version":3,"sources":["campo/form.js","campo/Nave.js","campo/propsLearn.js","campo/about.js","campo/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Formlist","props","react_default","a","createElement","console","log","list","map","item","key","name","email","React","Component","Form","Nave","className","concat","mode","react_router_dom","to","home","about","Checkbox","toggle","onClick","togglemode","modename","defaultProps","Propslearn","_useState","useState","_useState2","Object","slicedToArray","textarea","setTextarea","Fragment","style","color","Container","text","marginTop","Grid","centered","columns","Column","heading","Form_Form","Field","background","value","onChange","e","target","placeholder","Button","newText","toUpperCase","showalert","toLowerCase","document","getElementsByClassName","select","execCommand","focus","trim","split","join","length","Aboutus","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeIndex","handleClick","titleProps","index","newIndex","setState","Accordion","styled","Title","active","Icon","Content","Alert","alert","type","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setModeName","_useState5","_useState6","setAlert","showAlert","message","setTimeout","body","backgroundColor","title","setInterval","react_router","path","element","about_Aboutus","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"4SAoDA,SAASA,EAASC,GACd,OAAOC,EAAAC,EAAAC,cAAA,WACFC,QAAQC,IAAIL,GACrBC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACCH,EAAMM,KAAKC,IAAI,SAAAC,GAAI,OACpBP,EAAAC,EAAAC,cAAA,MAAIM,IAAKD,GAAT,QAAqBA,EAAKE,KAA1B,UAAuCF,EAAKG,WAzDzBC,IAAMC,UAgEVC,qBC3DA,SAASC,EAAKf,GAE3B,OACEC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,WACff,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,OAAKa,UAAS,MAAAC,OAAQjB,EAAMkB,KAAd,UACfjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMH,UAAU,cAAcI,GAAG,KAAKpB,EAAMqB,MAC5CpB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMH,UAAU,OAAOI,GAAG,YAAYpB,EAAMsB,OAC5CrB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMH,UAAU,OAAOI,GAAG,SAA1B,aAEAnB,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cACXf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,QACff,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAUC,QAAM,EAACC,QAASzB,EAAM0B,aAC/B1B,EAAM2B,cAgBnBZ,EAAKa,aAAe,CAChBP,KAAO,YACPC,MAAQ,yDCjCG,SAASO,EAAW7B,GAAO,IAAA8B,EACRC,mBAAU,eADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjCK,EADiCH,EAAA,GACvBI,EADuBJ,EAAA,GAkCxC,OAAQ/B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACRpC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,WAAYsB,MAAoB,aAAbtC,EAAMkB,KAAkB,CAACqB,MAAM,SAAS,CAACA,MAAM,UAC7EtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAWC,MAAI,EAACH,MAAO,CAAEI,UAAW,QAEtCzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtB5C,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,OAAN,KACA7C,EAAAC,EAAAC,cAAA,UAAKH,EAAM+C,SAEL9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,CAAMhC,UAAU,UAClBf,EAAAC,EAAAC,cAAC6C,EAAA,EAAKC,MAAN,KACEhD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,YAAUa,UAAU,WAAWsB,MAAoB,aAAbtC,EAAMkB,KAAkB,CAACqB,MAAM,QAAQW,WAAW,SAAS,CAACX,MAAM,QAAQW,WAAW,WAAaC,MAAOhB,EAAUiB,SAd9I,SAACC,GACpBjB,EAAYiB,EAAEC,OAAOH,QAaoKI,YAAY,cAA7L,MAEFtD,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GAExB5C,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,OAAN,KACA7C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQ/B,QA/CS,WACvB,IAAIgC,EAAUtB,EAASuB,cACvBtB,EAAYqB,GACZzD,EAAM2D,UAAU,oBAAoB,WA4C9B,cAEA1D,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,OAAN,KACA7C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQ/B,QA5CS,WACvB,IAAIgC,EAAUtB,EAASyB,cACvBxB,EAAYqB,GACZzD,EAAM2D,UAAU,qBAAqB,WAyC/B,eAGA1D,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,OAAN,KACA7C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQ/B,QAzCG,SAAC4B,GACPQ,SAASC,uBAAuB,aACpC,GAAGC,SACVF,SAASG,YAAY,QACrBX,EAAEC,OAAOW,QACTjE,EAAM2D,UAAU,cAAc,WAoCxB,cAGA1D,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,OAAN,KACA7C,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQ/B,QApCU,WACxBW,EAAYD,EAAS+B,OAAOC,MAAM,MAAMC,KAAK,MAC7CpE,EAAM2D,UAAU,gBAAgB,WAkC1B,oBASJ1D,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,OAAN,KACE7C,EAAAC,EAAAC,cAAA,yBACEF,EAAAC,EAAAC,cAAA,SAAIgC,EAASkC,OAAO,EAAIlC,EAAS+B,OAAOC,MAAM,MAAMC,KAAK,KAAKD,MAAM,KAAKE,OAAO,EAAhF,cAA8FlC,EAASkC,OAAvG,cACApE,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAIgC,8BC1EOmC,cACrB,SAAAA,EAAYtE,GAAM,IAAAuE,EAAA,OAAAtC,OAAAuC,EAAA,EAAAvC,CAAAwC,KAAAH,IACdC,EAAAtC,OAAAyC,EAAA,EAAAzC,CAAAwC,KAAAxC,OAAA0C,EAAA,EAAA1C,CAAAqC,GAAAM,KAAAH,KAAMzE,KAER6E,MAAQ,CAAEC,YAAa,GAHPP,EAKhBQ,YAAc,SAAC1B,EAAG2B,GAAe,IACvBC,EAAUD,EAAVC,MAEFC,EADkBX,EAAKM,MAArBC,cACyBG,GAAS,EAAIA,EAE9CV,EAAKY,SAAS,CAAEL,YAAaI,KAVfX,wEAaP,IACCO,EAAgBL,KAAKI,MAArBC,YACR,OACE7E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAWC,QAAM,GACfpF,EAAAC,EAAAC,cAACiF,EAAA,EAAUE,MAAX,CACEC,OAAwB,IAAhBT,EACRG,MAAO,EACPxD,QAASgD,KAAKM,aAEd9E,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAM9E,KAAK,aALb,kBAQAT,EAAAC,EAAAC,cAACiF,EAAA,EAAUK,QAAX,CAAmBF,OAAwB,IAAhBT,GACzB7E,EAAAC,EAAAC,cAAA,SACCsE,KAAKzE,MAAMkB,KADZ,4JASFjB,EAAAC,EAAAC,cAACiF,EAAA,EAAUE,MAAX,CACEC,OAAwB,IAAhBT,EACRG,MAAO,EACPxD,QAASgD,KAAKM,aAEd9E,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAM9E,KAAK,aALb,iCAQAT,EAAAC,EAAAC,cAACiF,EAAA,EAAUK,QAAX,CAAmBF,OAAwB,IAAhBT,GACzB7E,EAAAC,EAAAC,cAAA,iNAOFF,EAAAC,EAAAC,cAACiF,EAAA,EAAUE,MAAX,CACEC,OAAwB,IAAhBT,EACRG,MAAO,EACPxD,QAASgD,KAAKM,aAEd9E,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CAAM9E,KAAK,aALb,6BAQAT,EAAAC,EAAAC,cAACiF,EAAA,EAAUK,QAAX,CAAmBF,OAAwB,IAAhBT,GACzB7E,EAAAC,EAAAC,cAAA,uHAIAF,EAAAC,EAAAC,cAAA,uTAjE2BU,aCDtB,SAAS6E,EAAM1F,GAO5B,OACEA,EAAM2F,OAAS1F,EAAAC,EAAAC,cAAA,OAAKa,UAAS,MAAAC,OAAQjB,EAAM2F,MAAMC,KAApB,aAC7B3F,EAAAC,EAAAC,cAAA,OAAKa,UAAU,UAAf,aAPe,SAAC6E,GAClB,IAAMC,EAAQD,EAAKjC,cACnB,OAAOkC,EAAMC,OAAO,GAAGrC,cAAcoC,EAAME,MAAM,GAKZC,CAAWjG,EAAM2F,MAAMO,KAA1D,uBCqEWC,MAhEf,WAAe,IAAArE,EACSC,mBAAS,YADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACRZ,EADQc,EAAA,GACFoE,EADEpE,EAAA,GAAAqE,EAEiBtE,mBAAS,oBAF1BuE,EAAArE,OAAAC,EAAA,EAAAD,CAAAoE,EAAA,GAER1E,EAFQ2E,EAAA,GAEEC,EAFFD,EAAA,GAAAE,EAGWzE,mBAAS,MAHpB0E,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GAGRb,EAHQc,EAAA,GAGDC,EAHCD,EAAA,GAKTE,EAAY,SAACC,EAAQhB,GACzBc,EAAS,CACPR,IAAIU,EACJhB,KAAKA,IAEPiB,WAAW,WACTH,EAAS,OACT,OAkCF,OACAzG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACApC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,KACElB,EAAAC,EAAAC,cAACY,EAAD,CAAMM,KAAK,OAAOC,MAAM,WAAWK,SAAWA,EAAUT,KAAMA,EAAMQ,WAhCrD,WACP,aAAPR,GACDkF,EAAQ,YACRG,EAAY,qBACZ1C,SAASiD,KAAKxE,MAAMyE,gBAAkB,sBACtCJ,EAAU,qBAAqB,SAC/B9C,SAASmD,MAAO,YAEhBC,YAAY,WACVpD,SAASmD,MAAQ,qBAEZ,KAERC,YAAY,WACfpD,SAASmD,MAAQ,qBAEZ,OAIDZ,EAAQ,YACRG,EAAY,oBACZ1C,SAASiD,KAAKxE,MAAMyE,gBAAkB,QACtCJ,EAAU,sBAAsB,WAChC9C,SAASmD,MAAO,iBAShB/G,EAAAC,EAAAC,cAACuF,EAAD,CAAOC,MAAOA,IACd1F,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KAEEjH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASnH,EAAAC,EAAAC,cAAC0B,EAAD,CAAY8B,UAAWgD,EAAW5D,QAAQ,oBAAoBpB,SAAWA,EAAUT,KAAMA,MAChHjB,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,YAAYC,QAASnH,EAAAC,EAAAC,cAACkH,EAAD,CAASnG,KAAMA,UC1DzCoG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAApE,EAAA,GAAAqE,KAAAD,EAAAE,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWtE,SAASuE,eAAe,SACpDC,OACHpI,EAAAC,EAAAC,cAACF,EAAAC,EAAMoI,WAAP,KACErI,EAAAC,EAAAC,cAACoI,EAAD,QAOJjB","file":"static/js/main.8a1ff0b6.chunk.js","sourcesContent":["import React from \"react\";\nclass Form extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.state = {arform:[],name:'',email:''}\n        this.saveData = this.saveData.bind(this)\n        this.dataChange = this.dataChange.bind(this)\n\n    }\n\n    dataChange = (event) =>{\n        event.preventDefault()\n    if(event.target.id === 'name'){\n        this.setState({\n            name:event.target.value\n        })\n    }\n    if(event.target.id === 'email'){\n        this.setState({\n            email:event.target.value\n        })\n    }\n\n    }\n\n\n    saveData = (e) => {\n        e.preventDefault()\n\n            const newData = { name:this.state.name,\n                    email:this.state.email\n            }\n            this.setState( state=>({\n                arform : state.arform.concat(newData),\n\n            }))\n    }\n \n    render(){\n        return(<div className=\"formsub\">\n            <h2> Form Submit</h2>\n            <Formlist list={this.state.arform}/>\n            <form onSubmit={this.saveData}>\n                <input type=\"text\" onChange={this.dataChange} placeholder=\"Name\"  id=\"name\" value={this.state.name}/>\n                <input type=\"text\" onChange={this.dataChange} placeholder=\"Email\" id=\"email\" value={this.state.email}/>\n                <button> submit form</button>\n            </form>\n        </div>)\n    }\n}\n\nfunction Formlist(props) {\n    return(<div>\n        {console.log(props)}\n<h3> Form List</h3>\n<ul>\n{props.list.map(item=>(\n<li key={item}>Name:{item.name} Email:{item.email}</li>\n))\n}\n</ul>\n    </div>)\n}\n\nexport default Form;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox } from 'semantic-ui-react'\nimport {\n    Link,\n  } from \"react-router-dom\";\nexport default function Nave(props) {\n\n  return (\n    <div className=\"navebar\">\n    <div><div className={`ui ${props.mode} menu`}>\n        <Link className=\"active item\" to=\"/\">{props.home}</Link>\n        <Link className=\"item\" to=\"/aboutus\">{props.about}</Link>\n        <Link className=\"item\" to=\"/form\">Form List</Link>\n\n        <div className=\"right menu\">\n            <div className=\"item\">\n            <Checkbox toggle onClick={props.togglemode}/> \n            {props.modename}\n                    </div>\n                    </div>\n                    </div>\n                        </div>\n\n\n    </div>\n  )\n}\n\nNave.propTypes = {\n    home : PropTypes.string.isRequired,\n    about : PropTypes.string\n}\n\nNave.defaultProps = {\n    home : \"Home Page\",\n    about : \"About Us page\"\n}","import React, {useState} from 'react'\nimport { Container, Button, Form,Grid} from 'semantic-ui-react'\n\nexport default function Propslearn(props) {\n  const [textarea, setTextarea] = useState( \"Enter Value\" );\n\n  const handleClickUpper = ()=>{\n    let newText = textarea.toUpperCase();\n    setTextarea(newText);\n    props.showalert('uppercase success','green');\n\n  }\n  const handleClickLower = ()=>{\n    let newText = textarea.toLowerCase();\n    setTextarea(newText);\n    props.showalert('Lower Case success','green');\n\n  }\n\n  const handleCopy = (e)=>{\n    let text = document.getElementsByClassName('textarea ');\n      text[0].select();\n    document.execCommand('copy');\n    e.target.focus();\n    props.showalert('text copied','green');\n\n  }\n\n  const handleRemoveSpace = ()=>{\n    setTextarea(textarea.trim().split(/ +/).join(' '))\n    props.showalert('removed space','green');\n\n  }\n\n  const handleChange = (e)=>{\n    setTextarea(e.target.value);\n  }\n  return (<>\n  <div className=\"formlist\"  style={props.mode==='pointing'?{color:'black'}:{color:'white'}}>\n      <Container text style={{ marginTop: '7em' }}>\n\n    <Grid centered columns={2}>\n      <Grid.Column>\n      <h2>{props.heading}</h2>\n\n            <Form className='editor'>\n          <Form.Field>\n            <label>First Name</label>\n            <textarea className='textarea' style={props.mode==='pointing'?{color:'black',background:\"white\"}:{color:'white',background:'#02161d'}}  value={textarea} onChange={handleChange} placeholder='First Name' > </textarea>\n          </Form.Field>\n          <Grid centered columns={2}>\n\n          <Grid.Column>\n          <Button onClick={handleClickUpper} >UpperCase</Button>\n          </Grid.Column>\n          <Grid.Column>\n          <Button onClick={handleClickLower} >Lower Case</Button>\n          </Grid.Column>\n\n          <Grid.Column>\n          <Button onClick={handleCopy} >Copy Text</Button>\n          </Grid.Column>\n\n          <Grid.Column>\n          <Button onClick={handleRemoveSpace} >Remove space</Button>\n          </Grid.Column>\n\n          </Grid>\n\n\n\n        </Form>\n      </Grid.Column>\n      <Grid.Column>\n        <h2> Text Count</h2>\n          <p>{textarea.length>0 ? textarea.trim().split(/ +/).join(' ').split(\" \").length:0} Words and {textarea.length} Charector</p>\n          <h2> Preview</h2>\n          <p>{textarea}</p>\n\n      </Grid.Column>\n    </Grid>\n    </Container>\n    </div>\n        </>\n  )\n}\n","import React, { Component } from 'react'\nimport { Accordion, Icon } from 'semantic-ui-react'\n\nexport default class Aboutus extends Component {\nconstructor(props){\n    super(props)\n}\n  state = { activeIndex: 0 }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n    return (\n      <Accordion styled>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={this.handleClick}\n        >\n          <Icon name='dropdown' />\n          What is a dog?\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n          <p>\n{          this.props.mode\n}\n            A dog is a type of domesticated animal. Known for its loyalty and\n            faithfulness, it can be found as a welcome guest in many households\n            across the world.\n          </p>\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 1}\n          index={1}\n          onClick={this.handleClick}\n        >\n          <Icon name='dropdown' />\n          What kinds of dogs are there?\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 1}>\n          <p>\n            There are many breeds of dogs. Each breed varies in size and\n            temperament. Owners often select a breed of dog that they find to be\n            compatible with their own lifestyle and desires from a companion.\n          </p>\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 2}\n          index={2}\n          onClick={this.handleClick}\n        >\n          <Icon name='dropdown' />\n          How do you acquire a dog?\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 2}>\n          <p>\n            Three common ways for a prospective owner to acquire a dog is from\n            pet shops, private owners, or shelters.\n          </p>\n          <p>\n            A pet shop may be the most convenient way to buy a dog. Buying a dog\n            from a private owner allows you to assess the pedigree and\n            upbringing of your dog before choosing to take it home. Lastly,\n            finding your dog from a shelter, helps give a good home to a dog who\n            may not find one so readily.\n          </p>\n        </Accordion.Content>\n      </Accordion>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n\nconst capitalize = (word)=>{\n  const lower = word.toLowerCase();\n  return lower.charAt(0).toUpperCase()+lower.slice(1);\n}\n\n  return (\n    props.alert && <div className={`ui ${props.alert.type} message`}>\n    <div className=\"header\">Success:  {capitalize(props.alert.msg)} </div>\n   </div>\n  )\n}\n\n","import React, { useState } from 'react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport Form from './campo/form';\nimport Nave from './campo/Nave';\nimport Propslearn from './campo/propsLearn';\nimport Aboutus from './campo/about';\nimport Alert from './campo/Alert';\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\n\nfunction App() {\nconst [mode, setMode] = useState('pointing');\nconst [modename, setModeName] = useState('Dark Mode Enable');\nconst [alert, setAlert] = useState(null);\n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\n  setTimeout(()=>{\n    setAlert(null);\n  },1500)\n}\n\n\n\nconst toggleMode = ()=>{\n  if(mode==='pointing'){\n    setMode('inverted');\n    setModeName('Light Mode Enable');\n    document.body.style.backgroundColor = \"rgb(30 29 29 / 87%)\";\n    showAlert('Dark Mode Enabelde','black');\n    document.title =\"Dark Mode\";\n\n    setInterval(()=>{\n      document.title = \"textutil two mode\";\n      \n         },700);\n\n   setInterval(()=>{\ndocument.title = \"textutil new mode\";\n\n   },2000);\n\n\n  }else{\n    setMode('pointing');\n    setModeName('Dark Mode Enable')\n    document.body.style.backgroundColor = \"white\";\n    showAlert('Light mode enabled.','success');\n    document.title =\"Light Mode\";\n\n\n  }\n}\n  return (\n  <>\n  <Router>\n    <Nave home=\"Home\" about=\"About Us\" modename ={modename} mode={mode} togglemode={toggleMode}/>\n    <Alert alert={alert} />\n    <Routes>\n\n      <Route path=\"/\" element={<Propslearn showalert={showAlert} heading=\"Text Form Example\" modename ={modename} mode={mode} />} />\n        <Route path=\"aboutus/*\" element={<Aboutus mode={mode}/>} />\n        {/* <Route path=\"/form\" element={ <Form/>} /> */}\n    </Routes>\n  </Router>\n\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}